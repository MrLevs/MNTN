html{-webkit-box-sizing:border-box;box-sizing:border-box}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}body,html{margin:0;padding:0;border:0;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;-ms-text-size-adjust:none;text-size-adjust:none}a,b,blockquote,canvas,caption,code,div,em,embed,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,i,iframe,img,label,li,main,nav,object,ol,p,pre,section,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;-ms-text-size-adjust:none;text-size-adjust:none}a{color:inherit;text-decoration:none}footer,header,main,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}input{border-radius:0}body,html{font:700 16px "Roboto",sans-serif;background:#000;height:100%;color:#fff}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100%}.main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}.footer{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.container{max-width:1490px;margin:0 auto;padding:0 15px}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:0 40px}.menu__item{color:#fff;font-size:1.3rem;position:relative}.menu__item::before{background:#fff;width:100%;height:1px;position:absolute;left:0;top:100%}.header__login:hover::after,.menu__item:hover::before{content:""}.header{position:relative;top:0;left:0;z-index:100}.header__nav{position:relative;padding:80px 0 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__login{padding-left:30px;position:relative;background:0 0;border:0;outline:0;color:#fff;font-size:1.3rem;cursor:pointer}.header__login::before{background:url(../img/login.svg);width:22px;height:22px;content:"";position:absolute;top:0;left:0}.header__login::after{background:#fff;width:100%;height:1px;position:absolute;left:0;top:100%}.parallax{min-height:100vh}.parallax__body{width:100%;height:100%;position:fixed;top:0;left:0}.parallax__container{max-width:1000px;margin:0 auto;padding:50px 25px;position:relative;top:150px;z-index:2}.parallax__label{text-transform:uppercase;color:#fbd784;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:1.15rem;letter-spacing:6px;margin:0 0 30px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.parallax__label::before{background:#fbd784;content:"";width:70px;height:2px;margin:0 30px 0 0}.parallax__title{font-size:3rem}.parallax__images{width:120%;height:120%;position:absolute;top:-10%;left:-10%;z-index:1}.parallax__images::before{pointer-events:none;content:"";z-index:1;top:0;background:-webkit-gradient(linear,left bottom,left top,from(rgba(11,29,38,0)),to(rgba(11,29,38,.8)));background:linear-gradient(0deg,rgba(11,29,38,0) 0,rgba(11,29,38,.8) 100%)}.parallax__item{top:0}.content::before,.parallax__clouds,.parallax__human,.parallax__images::before,.parallax__item,.parallax__mountain{width:100%;height:100%;position:absolute;left:0}.parallax__clouds{background:url(../img/clouds.jpg) top/cover no-repeat;top:0}.parallax__mountain{background:url(../img/mountain.png) top/cover no-repeat;top:25%;z-index:5}.parallax__human{background:url(../img/human.png) top/cover no-repeat;top:45%;z-index:10}.content{background:#0b1d26;position:relative;z-index:5}.content::before{pointer-events:none;content:"";top:0;height:300px;-webkit-transform:translate(0,-100%);-ms-transform:translate(0,-100%);transform:translate(0,-100%);background:-webkit-gradient(linear,left top,left bottom,from(rgba(11,29,38,0)),color-stop(72%,#0b1d26));background:linear-gradient(180deg,rgba(11,29,38,0) 0,#0b1d26 72%)}@supports (-webkit-appearance:none){.header__login::before{background-image:url(../img/login.svg)}.parallax__clouds{background:url(../img/clouds.webp) top/cover no-repeat}.parallax__mountain{background:url(../img/mountain.webp) top/cover no-repeat}.parallax__human{background:url(../img/human.webp) top/cover no-repeat}}@media (max-aspect-ratio:3/2){.parallax__human{background-position:20% top}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */